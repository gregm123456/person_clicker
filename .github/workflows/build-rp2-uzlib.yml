name: Build MicroPython RP2 (uzlib)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-uzlib-uf2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git cmake python3 python3-pip pkg-config libffi-dev libssl-dev wget unzip
          sudo apt-get install -y gcc-arm-none-eabi binutils-arm-none-eabi libnewlib-arm-none-eabi

      - name: Clone MicroPython
        run: |
          git clone https://github.com/micropython/micropython.git micropython-build
          cd micropython-build
          git submodule update --init --recursive

      - name: Enable uzlib in rp2 port (deterministic)
        run: |
          set -euo pipefail
          mpconf=micropython-build/ports/rp2/mpconfigport.h
          if [ ! -f "$mpconf" ]; then
            echo "ERROR: $mpconf not found" >&2
            ls -l micropython-build/ports/rp2 || true
            exit 1
          fi
          # If define exists, replace it with (1)
          if grep -q '^[[:space:]]*#define[[:space:]]\+MICROPY_PY_UZLIB' "$mpconf"; then
            sed -i 's/^[[:space:]]*#define[[:space:]]\+MICROPY_PY_UZLIB.*$/#define MICROPY_PY_UZLIB (1)/' "$mpconf"
            echo "Replaced existing MICROPY_PY_UZLIB definition"
          else
            # Try to insert near other MICROPY_PY_* lines; fallback to append
            if awk '/MICROPY_PY_/' "$mpconf" | grep -q .; then
              awk 'BEGIN{inserted=0} /MICROPY_PY_/{print; if(!inserted){print "#define MICROPY_PY_UZLIB (1)"; inserted=1} next} {print}' "$mpconf" > /tmp/mpconf && mv /tmp/mpconf "$mpconf"
              echo "Inserted MICROPY_PY_UZLIB near other MICROPY_PY_* entries"
            else
              echo "#define MICROPY_PY_UZLIB (1)" >> "$mpconf"
              echo "Appended MICROPY_PY_UZLIB at end of file"
            fi
          fi
          # Show context for logs
          grep -n 'MICROPY_PY_UZLIB' "$mpconf" || true
          sed -n '1,160p' "$mpconf" | sed -n '1,120p'

      - name: Build mpy-cross
        run: |
          cd micropython-build/mpy-cross
          make -j$(nproc)

      - name: Check uzlib extmod compilation
        run: |
          cd micropython-build
          echo "=== Checking if uzlib extmod exists ==="
          ls -la extmod/uzlib* || echo "No uzlib files found in extmod/"
          echo "=== Checking rp2 port extmod inclusion ==="
          grep -r "uzlib\|UZLIB" ports/rp2/ || echo "No uzlib references in rp2 port"
          
      - name: Build RP2 firmware (RPI_PICO2_W)
        run: |
          cd micropython-build/ports/rp2
          make submodules
          # Build for Pico 2 W board name (device reports RPI_PICO2_W)
          echo "=== Building with verbose output to check uzlib compilation ==="
          make BOARD=RPI_PICO2_W -j$(nproc) V=1 | tee build.log
          echo "=== Checking if uzlib was compiled ==="
          grep -i "uzlib\|extmod.*uzlib" build.log || echo "No uzlib compilation found"

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: micropython-rp2-uzlib-uf2
          path: micropython-build/ports/rp2/build-RPI_PICO2_W/firmware.uf2
